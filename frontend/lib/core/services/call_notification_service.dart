import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../socket/call_socket_client.dart';
import 'webrtc_service.dart';
import '../../features/call/presentation/screens/incoming_call_screen.dart';

/// –°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≤—Ö–æ–¥—è—â–∏—Ö –∑–≤–æ–Ω–∫–∞—Ö
class CallNotificationService {
  static final CallNotificationService _instance = CallNotificationService._internal();
  factory CallNotificationService() => _instance;
  CallNotificationService._internal();

  /// –ü–æ–∫–∞–∑–∞—Ç—å —ç–∫—Ä–∞–Ω –≤—Ö–æ–¥—è—â–µ–≥–æ –∑–≤–æ–Ω–∫–∞
  void showIncomingCall(BuildContext context, Map<String, dynamic> callData) {
    debugPrint('üîî CallNotificationService: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –≤—Ö–æ–¥—è—â–µ–≥–æ –∑–≤–æ–Ω–∫–∞');
    debugPrint('üîî CallNotificationService: –î–∞–Ω–Ω—ã–µ –∑–≤–æ–Ω–∫–∞: $callData');
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–≤–æ–Ω–∫–∞
    final callId = callData['callId'] as String?;
    final remoteUserId = callData['remoteUserId'] as String?;
    final callType = callData['callType'] as String?;

    debugPrint('üîî CallNotificationService: callId: $callId, remoteUserId: $remoteUserId, callType: $callType');

    if (callId == null || remoteUserId == null || callType == null) {
      debugPrint('üî• CallNotificationService: –ù–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–≤–æ–Ω–∫–∞: $callData');
      return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –≤—Ö–æ–¥—è—â–µ–≥–æ –∑–≤–æ–Ω–∫–∞
    debugPrint('üîî CallNotificationService: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ IncomingCallScreen');
    Navigator.of(context).push(
      MaterialPageRoute(
        builder: (context) => IncomingCallScreen(
          callId: callId,
          remoteUserId: remoteUserId,
          callType: callType,
        ),
      ),
    );
    debugPrint('üîî CallNotificationService: IncomingCallScreen –ø–æ–∫–∞–∑–∞–Ω');
  }

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—à–∞—Ç–µ–ª–µ–π –¥–ª—è –≤—Ö–æ–¥—è—â–∏—Ö –∑–≤–æ–Ω–∫–æ–≤
  void initializeListeners(BuildContext context, CallSocketClient callSocketClient) {
    debugPrint('üîî CallNotificationService: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—à–∞—Ç–µ–ª–µ–π');
    
    // –°–ª—É—à–∞–µ–º –≤—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏
    callSocketClient.on('incoming_call', (data) {
      debugPrint('üîî CallNotificationService: –ü–æ–ª—É—á–µ–Ω –≤—Ö–æ–¥—è—â–∏–π –∑–≤–æ–Ω–æ–∫: $data');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –≤—Ö–æ–¥—è—â–µ–≥–æ –∑–≤–æ–Ω–∫–∞
      if (context.mounted) {
        showIncomingCall(context, data);
      }
    });
  }
}
